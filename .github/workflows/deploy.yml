name: Deploy to VPS

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install sshpass
      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      # Deploy to VPS
      - name: Deploy to VPS
        env:
          SSH_USER: ${{ secrets.VPS_USER }}
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_PASS: ${{ secrets.VPS_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          SENDGRID_EMAIL_SENDER: ${{ secrets.SENDGRID_EMAIL_SENDER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}

        run: |
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
          # Ensure deployment directory exists
          mkdir -p ~/backend/muthawwif
          cd ~/backend/muthawwif

          # Reset the repository and clean untracked files
          if [ ! -d .git ]; then
              git clone https://github.com/fuadeen/muthawwifApi.git .
          else
              git reset --hard origin/develop
              git clean -fd
              git pull origin develop
          fi

          # Generate .env only if it doesn't exist
          if [ ! -f .env ]; then
              cat <<EOT > .env
              DB_HOST=${DB_HOST}
              DB_PORT=${DB_PORT}
              DB_USER=${DB_USER}
              DB_PASSWORD=${DB_PASSWORD}
              DB_NAME=${DB_NAME}
              JWT_SECRET=${JWT_SECRET}
              SENDGRID_API_KEY=${SENDGRID_API_KEY}
              SENDGRID_EMAIL_SENDER=${SENDGRID_EMAIL_SENDER}
              SERVER_HOST=${SERVER_HOST}
              SERVER_PORT=${SERVER_PORT}
              EOT
          fi

          # Restart Docker containers
          docker-compose down
          docker-compose up --build -d
          EOF
